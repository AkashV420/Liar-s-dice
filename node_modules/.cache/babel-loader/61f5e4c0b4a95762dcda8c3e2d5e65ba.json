{"ast":null,"code":"import _regeneratorRuntime from \"/home/aakash/Desktop/Liars Dice 2018101011 /Liars Dice 2018101011/Liars Dice v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aakash/Desktop/Liars Dice 2018101011 /Liars Dice 2018101011/Liars Dice v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/aakash/Desktop/Liars Dice 2018101011 /Liars Dice 2018101011/Liars Dice v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aakash/Desktop/Liars Dice 2018101011 /Liars Dice 2018101011/Liars Dice v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aakash/Desktop/Liars Dice 2018101011 /Liars Dice 2018101011/Liars Dice v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aakash/Desktop/Liars Dice 2018101011 /Liars Dice 2018101011/Liars Dice v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aakash/Desktop/Liars Dice 2018101011 /Liars Dice 2018101011/Liars Dice v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aakash/Desktop/Liars Dice 2018101011 /Liars Dice 2018101011/Liars Dice v2/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport brain from '../brain.png';\nimport LiarsGame from '../abis/LiarsGame.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleSet = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var account, Game, gas, result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                account = _this.state.account;\n                Game = _this.state.token; //let hexNum= this.decToHex(this.state.number);\n\n                _context.next = 5;\n                return Game.methods.set(_this.state.number).estimateGas();\n\n              case 5:\n                gas = _context.sent;\n                _context.next = 8;\n                return Game.methods.set(_this.state.number).send({\n                  from: account,\n                  gas: gas\n                });\n\n              case 8:\n                result = _context.sent;\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.bidToContract = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        var account, Game, gas, result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n\n                _this.getTotalDices();\n\n                account = _this.state.account;\n                Game = _this.state.token; //let hexNum= this.decToHex(this.state.number);\n\n                _context2.next = 6;\n                return Game.methods.bid(_this.state.bidNum, _this.state.bidQty).estimateGas();\n\n              case 6:\n                gas = _context2.sent;\n                _context2.next = 9;\n                return Game.methods.bid(_this.state.bidNum, _this.state.bidQty).send({\n                  from: account,\n                  gas: gas\n                });\n\n              case 9:\n                result = _context2.sent;\n                console.log(result);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleGetRepeated = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n        var result, gameState, dec;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _this.state.token.methods.get().call();\n\n              case 2:\n                result = _context3.sent;\n                _context3.next = 5;\n                return _this.state.token.methods.getGameData().call();\n\n              case 5:\n                gameState = _context3.sent;\n                //console.log(gameState);\n                dec = _this.hexToDec(result);\n\n                _this.setState({\n                  numberGathered: dec\n                }); //gameBidder:'0x0', gameBidNum:0,gameBidQty:0\n\n\n                _this.setState({\n                  gameBidNum: _this.hexToDec(gameState[0])\n                });\n\n                _this.setState({\n                  gameBidQty: _this.hexToDec(gameState[1])\n                });\n\n                _this.setState({\n                  gameBidder: gameState[2]\n                });\n\n                _this.setState({\n                  currentTurnAddr: gameState[3]\n                });\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.handleGet = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(e) {\n        var result, dec;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                e.preventDefault();\n                _context4.next = 3;\n                return _this.state.token.methods.get().call();\n\n              case 3:\n                result = _context4.sent;\n                console.log(result);\n                dec = _this.hexToDec(result);\n\n                _this.setState({\n                  numberGathered: dec\n                });\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.getTotalDices = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(e) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return _this.state.token.methods.totalDiceList().call();\n\n              case 2:\n                result = _context5.sent;\n                console.log(result);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this.getWinnerDetails = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(e) {\n        var account, result;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                account = _this.state.account;\n                _context6.next = 3;\n                return _this.state.token.methods.winnerDetails().call({\n                  from: account\n                });\n\n              case 3:\n                result = _context6.sent;\n\n                _this.setState({\n                  winnerAddr: result\n                });\n\n                console.log(result);\n\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x6) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this.challengeBid = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(e) {\n        var gas, account, result;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _this.getWinnerDetails();\n\n                _context7.next = 3;\n                return _this.state.token.methods.challenge().estimateGas();\n\n              case 3:\n                gas = _context7.sent;\n                account = _this.state.account;\n                _context7.next = 7;\n                return _this.state.token.methods.challenge().send({\n                  from: account,\n                  gas: gas\n                });\n\n              case 7:\n                result = _context7.sent;\n\n                //console.log(\"Winner is : \"+ this.state.winnerAddr);\n                _this.getDiceList();\n\n              case 9:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x7) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    _this.getDiceList = /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(e) {\n        var account, result, parsedarr;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                account = _this.state.account;\n                _context8.next = 3;\n                return _this.state.token.methods.showDiceList().call({\n                  from: account\n                });\n\n              case 3:\n                result = _context8.sent;\n                console.log(result);\n                parsedarr = _this.hexArrToDecArr(result[1]);\n\n                _this.setState({\n                  diceList: parsedarr\n                }); //console.log(parsedarr);\n\n\n                _this.handleGetRepeated();\n\n                setInterval(_this.handleGetRepeated, 1000);\n\n              case 9:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function (_x8) {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n\n    _this.handleJoin = /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(e) {\n        var acc, Game, gas, result;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                e.preventDefault();\n                acc = _this.state.account;\n                Game = _this.state.token;\n                _context9.next = 5;\n                return Game.methods.joinGame().estimateGas();\n\n              case 5:\n                gas = _context9.sent;\n                _context9.next = 8;\n                return Game.methods.joinGame().send({\n                  from: acc,\n                  gas: gas\n                });\n\n              case 8:\n                result = _context9.sent;\n\n              case 9:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      return function (_x9) {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      account: '0x0',\n      number: 0,\n      numberGathered: 0,\n      token: null,\n      diceList: [],\n      bidNum: 0,\n      bidQty: 0,\n      gameBidder: '0x0',\n      gameBidNum: 0,\n      gameBidQty: 0,\n      winnerAddr: '0x0',\n      currentTurnAddr: '0x0'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context10.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n    /*\n    function to load, check whether metamask is present or not and connect to metamask.\n    */\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context11.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context11.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context11.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n    /*\n    Function to load the blockchain data such as loading the smart\n    contract and verify whether the smart contract is deployed to detected network or not. \n    */\n\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        var web3, accounts, networkId, networkData, abi, address, token;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                web3 = window.web3;\n                _context12.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context12.sent;\n                this.setState({\n                  account: accounts[0]\n                }); // Load smart contract\n\n                _context12.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context12.sent;\n                networkData = LiarsGame.networks[networkId];\n\n                if (networkData) {\n                  abi = LiarsGame.abi;\n                  address = networkData.address;\n                  token = new web3.eth.Contract(abi, address);\n                  this.setState({\n                    token: token\n                  });\n                } else {\n                  alert('Smart contract not deployed to detected network.');\n                }\n\n              case 10:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n    /*\n    function to do important tasks such as estimating gas and sending ether from selected account \n    */\n\n  }, {\n    key: \"hexToDec\",\n\n    /*\n     *\n     *\n      Function to convert hexadecimal to decimal\n     *\n     *\n     */\n    value: function hexToDec(hexString) {\n      return parseInt(hexString, 16);\n    }\n    /*\n     *\n     *\n      Function to convert decimal to hexadecimal\n     *\n     *\n     */\n\n  }, {\n    key: \"decToHex\",\n    value: function decToHex(decString) {\n      return decString.toString(16);\n    }\n    /*\n     *\n     *\n     function hexArr to DecArr\n     *\n     *\n     */\n\n  }, {\n    key: \"hexArrToDecArr\",\n    value: function hexArrToDecArr(result) {\n      var retArr = [];\n\n      for (var i = 0; i < result.length; i++) {\n        if (this.hexToDec(result[i]) != -1) retArr.push(this.hexToDec(result[i]));\n      }\n\n      return retArr;\n    }\n    /*\n     *\n     *\n     function to get details of the winner\n     *\n     *\n     */\n\n  }, {\n    key: \"render\",\n\n    /*\n     *\n     *\n     Render function to render HTML and CSS to the DAPP\n     *\n     *\n     */\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"body\", {\n        class: \"body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"navbar-brand text-white col-sm-3 col-md-2 mr-0\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: brain,\n        width: \"30\",\n        height: \"30\",\n        className: \"d-inline-block align-top\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }\n      }), \"\\xA0 Liars Dice\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"account\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 45\n        }\n      }, \" Your Address: \", this.state.account))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        class: \"center-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }\n      }, \"Your Address: \", this.state.account, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 68\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        class: \"button\",\n        onClick: this.handleJoin,\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }\n      }, \"Join Game\"), /*#__PURE__*/React.createElement(\"button\", {\n        class: \"button1\",\n        onClick: this.getDiceList,\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }\n      }, \"Start/Refresh Game\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }\n      }), \" Your Dices:\", this.state.diceList.map(function (item, i) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 22\n          }\n        }, item);\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }\n      }), this.state.gameBidNum && /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }\n      }, \"Address \", this.state.gameBidder, \" has bidded:  \", this.state.gameBidNum, \" for Qty :  \", this.state.gameBidQty), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }\n      }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 20\n        }\n      }), \" \", /*#__PURE__*/React.createElement(\"button\", {\n        class: \"button\",\n        onClick: this.challengeBid,\n        disabled: this.state.currentTurnAddr != this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 27\n        }\n      }, \"Challenge\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 160\n        }\n      }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 167\n        }\n      })), /*#__PURE__*/React.createElement(\"form\", {\n        class: \"center-text\",\n        onSubmit: this.bidToContract,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }\n      }, \"Dice Number:\", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: this.state.bidNum,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            bidNum: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }\n      }, \"Qty:\", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: this.state.bidQty,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            bidQty: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        class: \"button\",\n        type: \"submit\",\n        disabled: this.state.currentTurnAddr != this.state.account,\n        value: \"BID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/aakash/Desktop/Liars Dice 2018101011 /Liars Dice 2018101011/Liars Dice v2/src/components/App.js"],"names":["React","Component","Web3","brain","LiarsGame","App","props","handleSet","e","preventDefault","account","state","Game","token","methods","set","number","estimateGas","gas","send","from","result","bidToContract","getTotalDices","bid","bidNum","bidQty","console","log","handleGetRepeated","get","call","getGameData","gameState","dec","hexToDec","setState","numberGathered","gameBidNum","gameBidQty","gameBidder","currentTurnAddr","handleGet","totalDiceList","getWinnerDetails","winnerDetails","winnerAddr","challengeBid","challenge","getDiceList","showDiceList","parsedarr","hexArrToDecArr","diceList","setInterval","handleJoin","acc","joinGame","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","networkData","networks","abi","address","Contract","hexString","parseInt","decString","toString","retArr","i","length","push","map","item","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport './App.css';\nimport brain from '../brain.png'\nimport LiarsGame from '../abis/LiarsGame.json'\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '0x0', number: 0, numberGathered: 0, token: null, diceList:[],bidNum:0,bidQty:0, gameBidder:'0x0', gameBidNum:0,gameBidQty:0,winnerAddr:'0x0',currentTurnAddr:'0x0'\n    }\n  }\n\n  async componentWillMount() {\n\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n/*\nfunction to load, check whether metamask is present or not and connect to metamask.\n*/\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n/*\nFunction to load the blockchain data such as loading the smart\ncontract and verify whether the smart contract is deployed to detected network or not. \n*/\n  async loadBlockchainData() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n\n    // Load smart contract\n    const networkId = await web3.eth.net.getId()\n    const networkData = LiarsGame.networks[networkId]\n    if (networkData) {\n      const abi = LiarsGame.abi\n      const address = networkData.address\n      const token = new web3.eth.Contract(abi, address)\n      this.setState({ token: token })\n    } else {\n      alert('Smart contract not deployed to detected network.')\n    }\n\n  }\n\n/*\nfunction to do important tasks such as estimating gas and sending ether from selected account \n*/\n\n  handleSet = async (e) => {\n    e.preventDefault();\n    const account = this.state.account;\n    const Game = this.state.token;\n    //let hexNum= this.decToHex(this.state.number);\n    const gas = await Game.methods.set(this.state.number).estimateGas();\n    const result = await Game.methods.set(this.state.number).send({ from: account, gas });\n    //console.log(result);\n  }\n/*\n *\n *\n function to bid to the contract.\n *\n *\n */\n   bidToContract = async (e) => {\n    e.preventDefault();\n    this.getTotalDices();\n    const account = this.state.account;\n    const Game = this.state.token;\n    //let hexNum= this.decToHex(this.state.number);\n    const gas = await Game.methods.bid(this.state.bidNum,this.state.bidQty).estimateGas();\n    const result = await Game.methods.bid(this.state.bidNum,this.state.bidQty).send({ from: account, gas });\n    console.log(result);\n    \n  }\n\n/***\nfunction for when handle get repeated.\n***/\n\n  handleGetRepeated = async (e) => {\n    const result = await this.state.token.methods.get().call();\n    const gameState = await this.state.token.methods.getGameData().call();\n    //console.log(gameState);\n    let dec = this.hexToDec(result);\n    this.setState({ numberGathered: dec });\n    //gameBidder:'0x0', gameBidNum:0,gameBidQty:0\n\n    this.setState({gameBidNum:this.hexToDec(gameState[0])});\n    this.setState({gameBidQty:this.hexToDec(gameState[1])});\n    this.setState({gameBidder:gameState[2]});\n    this.setState({currentTurnAddr:gameState[3]});\n    \n\n    \n  }\n  handleGet = async (e) => {\n    e.preventDefault();\n    const result = await this.state.token.methods.get().call();\n    console.log(result);\n    let dec = this.hexToDec(result);\n    this.setState({ numberGathered: dec });\n  }\n/*\n *\n *\n Function to get the list of dices\n *\n *\n */\n  getTotalDices = async (e) => {\n    //e.preventDefault();\n    const result = await this.state.token.methods.totalDiceList().call();\n    console.log(result);\n  }\n  /*\n   *\n   *\n    Function to convert hexadecimal to decimal\n   *\n   *\n   */\n  hexToDec(hexString) {\n    return parseInt(hexString, 16);\n  }\n\n  /*\n   *\n   *\n    Function to convert decimal to hexadecimal\n   *\n   *\n   */\n\n  decToHex(decString) {\n    return decString.toString(16);\n  }\n\n  /*\n   *\n   *\n   function hexArr to DecArr\n   *\n   *\n   */\n\n  hexArrToDecArr(result) {\n    let retArr = [];\n    for (let i = 0; i < result.length; i++) {\n      if (this.hexToDec(result[i]) != -1)\n        retArr.push(this.hexToDec(result[i]));\n    }\n    return retArr;\n  }\n  \n  /*\n   *\n   *\n   function to get details of the winner\n   *\n   *\n   */\n\n  getWinnerDetails= async (e) => {\n    const account = this.state.account;\n    const result = await this.state.token.methods.winnerDetails().call({ from: account });\n    this.setState({ winnerAddr: result });\n    console.log(result);\n  }\n\n  /*\n   *\n   *\n   function to challenge a bid.\n   *\n   *\n   */\n  challengeBid= async (e) => {\n    this.getWinnerDetails();\n    const gas = await this.state.token.methods.challenge().estimateGas();\n    const account = this.state.account;\n    const result = await this.state.token.methods.challenge().send({ from: account, gas });\n    //console.log(\"Winner is : \"+ this.state.winnerAddr);\n    this.getDiceList();\n  }\n  /*\n   *\n   *\n   function to get the Dice List.\n   *\n   *\n   */\n  getDiceList = async (e) => {\n    const account = this.state.account;\n    const result = await this.state.token.methods.showDiceList().call({ from: account });\n   \n    console.log(result);\n    const parsedarr = this.hexArrToDecArr(result[1]);\n  \n    this.setState({diceList: parsedarr});\n    //console.log(parsedarr);\n    this.handleGetRepeated();\n    setInterval(this.handleGetRepeated, 1000);\n  }\n\n  handleJoin = async (e) => {\n    e.preventDefault();\n    let acc=this.state.account;\n    let Game = this.state.token;\n    const gas = await Game.methods.joinGame().estimateGas();\n    const result = await Game.methods.joinGame().send({ from: acc, gas });\n    //this.getDiceList();\n    //this.setState({ gameJoined:true })\n    //console.log(result);\n   \n  }\n \n  /*\n   *\n   *\n   Render function to render HTML and CSS to the DAPP\n   *\n   *\n   */\n\n  render() {\n    return (\n      <body class=\"body\">\n      <div>\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand text-white col-sm-3 col-md-2 mr-0\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img src={brain} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\n            &nbsp; Liars Dice\n</a>\n          <ul className=\"navbar-nav px-3\">\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n              <small className=\"text-white\"><span id=\"account\"> Your Address: {this.state.account}</span></small>\n            </li>\n          </ul>\n        </nav>\n\n\n\n        <div className=\"center\">\n          <p class=\"center-text\">Your Address: {this.state.account}<br />\n            <button class=\"button\" onClick={this.handleJoin} type=\"button\">Join Game</button>\n            <button class=\"button1\" onClick={this.getDiceList} type=\"button\">Start/Refresh Game</button>\n            <br /> Your Dices:\n            {this.state.diceList.map(function(item, i){\n              return <li>{item}</li>\n            })}\n            <br />\n            <br /> \n            {this.state.gameBidNum &&\n            <span>\n            Address {this.state.gameBidder} has bidded:  {this.state.gameBidNum} for Qty :  {this.state.gameBidQty} \n            </span>\n            }\n            <br /> <br /> <button class=\"button\" onClick = {this.challengeBid} disabled={ this.state.currentTurnAddr != this.state.account}>Challenge</button> <br /> <br /></p>\n\n          <form class=\"center-text\" onSubmit={this.bidToContract} >\n            <label>\n              Dice Number:\n            <input type=\"text\" name=\"name\" value={this.state.bidNum} onChange={e => this.setState({ bidNum: e.target.value })} />\n            </label>\n            <label>\n              Qty:\n            <input type=\"text\" name=\"name\" value={this.state.bidQty} onChange={e => this.setState({ bidQty: e.target.value })} />\n            </label>\n            <input class=\"button\" type=\"submit\" disabled={ this.state.currentTurnAddr != this.state.account} value=\"BID\" />\n          </form>\n        </div>\n\n      {/*   <div className=\"center\">\n          <form onSubmit={this.handleSet}>\n            <label>\n              Set Number:\n            <input type=\"text\" name=\"name\" value={this.state.number} onChange={e => this.setState({ number: e.target.value })} />\n            </label>\n            <input type=\"submit\" value=\"Set Number\" />\n          </form>\n          <br />\n          <button onClick={this.handleGet} type=\"button\">Get Number</button>\n          {this.state.numberGathered}\n        </div> */}\n      </div>\n      </body>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}